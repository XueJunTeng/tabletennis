<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.tabletennis.mapper.NotificationMapper">
    <!-- 定义字段映射 -->
    <resultMap id="notificationResultMap" type="com.example.tabletennis.entity.Notification">
        <!-- 原有字段映射 -->
        <id property="notificationId" column="notification_id" />
        <result property="senderId" column="sender_id"/>
        <result property="receiverId" column="receiver_id"/>
        <result property="contentId" column="content_id"/>
        <result property="commentId" column="comment_id"/>
        <result property="type" column="type"
                typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result property="message" column="message"/>
        <result property="isRead" column="is_read"/>
        <result property="createdTime" column="created_time"/>
        <!-- 关联用户表的字段 -->
        <result property="senderAvatarUrl" column="sender_avatar_url"/>
        <result property="senderUsername" column="sender_username"/>
        <!-- 关联内容表的字段 -->
        <result property="contentTitle" column="content_title"/>
        <result property="contentType" column="content_type"/>
        <!-- 关联评论表的字段 -->
        <result property="commentContent" column="comment_content"/>
    </resultMap>

    <!-- 主查询 -->
    <select id="selectNotifications" resultMap="notificationResultMap">
        SELECT
        n.notification_id,
        n.sender_id,
        n.receiver_id,
        n.content_id,
        n.comment_id,
        n.type,
        n.message,
        n.is_read,
        n.created_time,
        u.avatar_url AS sender_avatar_url,
        u.username AS sender_username,
        co.title AS content_title,
        co.type AS content_type,
        c.content AS comment_content
        FROM notification n
        LEFT JOIN user u ON n.sender_id = u.user_id
        LEFT JOIN content co ON n.content_id = co.content_id
        LEFT JOIN comment c ON n.comment_id = c.comment_id
        WHERE n.receiver_id = #{receiverId}
        <if test="types != null and types.size() > 0">
            AND n.type IN
            <foreach item="type" collection="types" open="(" separator="," close=")">
                #{type}
            </foreach>
        </if>
        ORDER BY n.created_time DESC
    </select>

    <!-- 优化COUNT查询 -->
    <select id="selectNotifications_COUNT" resultType="long">
        SELECT COUNT(1)
        FROM notification n
        WHERE n.receiver_id = #{receiverId}
        <if test="types != null and types.size() > 0">
            AND n.type IN
            <foreach item="type" collection="types" open="(" separator="," close=")">
                #{type}
            </foreach>
        </if>
    </select>

    <insert id="insertNotification" parameterType="com.example.tabletennis.entity.Notification" useGeneratedKeys="true" keyProperty="notificationId">
        INSERT INTO notification
            (sender_id, receiver_id, content_id,comment_id, type, message, is_read)
        VALUES
            (#{senderId}, #{receiverId}, #{contentId},#{commentId}, #{type}, #{message}, #{isRead})
    </insert>

    <update id="batchUpdateReadStatus">
        UPDATE notification
        SET is_read = #{isRead}
        WHERE notification_id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="countUnreadByUserId" resultType="int">
        SELECT COUNT(*)
        FROM notification
        WHERE receiver_id = #{userId}
          AND is_read = FALSE
    </select>

    <select id="countUnreadByTypes" resultType="int">
        SELECT COUNT(*)
        FROM notification
        WHERE receiver_id = #{userId}
        AND is_read = 0
        AND type IN
        <foreach item="type" collection="types"
                 open="(" separator="," close=")">
            #{type}
        </foreach>
    </select>
</mapper>